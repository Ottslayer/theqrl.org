<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[The Quantum Resistant Ledger - Medium]]></title>
        <description><![CDATA[Cryptography with longevity. A post-quantum secure blockchain featuring a stateful signature scheme and unparalleled security. - Medium]]></description>
        <link>https://medium.com/the-quantum-resistant-ledger?source=rss----507e55639b6c---4</link>
        <image>
            <url>https://cdn-images-1.medium.com/proxy/1*TGH72Nnw24QL3iV9IOm4VA.png</url>
            <title>The Quantum Resistant Ledger - Medium</title>
            <link>https://medium.com/the-quantum-resistant-ledger?source=rss----507e55639b6c---4</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Wed, 20 May 2020 06:41:47 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/the-quantum-resistant-ledger" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[The QRL Enqlave Project — Bringing Post-Quantum Security to Ethereum and other blockchain platforms]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/the-qrl-enklave-project-bringing-post-quantum-security-to-ethereum-and-other-blockchain-platforms-31df477c543?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/31df477c543</guid>
            <dc:creator><![CDATA[Charlie Thompson]]></dc:creator>
            <pubDate>Mon, 18 May 2020 19:34:26 GMT</pubDate>
            <atom:updated>2020-05-19T21:58:22.338Z</atom:updated>
            <content:encoded><![CDATA[<h3>The QRL Enqlave Project — Bringing Post-Quantum Security to Ethereum</h3><h4>QRL’s Smart Contracts will bring the post-quantum security of XMSS (<a href="https://tools.ietf.org/html/rfc8391">eXtended Merkle Signature Scheme</a>) to mainnet Ethereum, and eventually to any other blockchain platform with sufficiently expressive smart contract capabilities.</h4><p><strong>tl;dr </strong>The QRL Enqlave Project will:</p><ul><li>Enable Ethereum users to protect their ETH and ERC-20 balances from the risk of a quantum computer attack, using Smart Contracts on mainnet Ethereum.</li><li>Enable the bi-directional migration of Quanta (QRL’s token) between QRL ←→ Ethereum and eventually any blockchain network with sufficient smart contract capabilities.</li><li>Enable the creation of post-quantum secure tokens on mainnet Ethereum (Ethereum Quantum Resistant Tokens, or “eQRTs”).</li></ul><p>Where possible, the QRL team has built off of <a href="https://github.com/OpenZeppelin">OpenZeppelin primitives</a> in order to make trust / audits easier. <strong><em>It should be noted that the transaction costs for these functions are currently very high.</em></strong></p><p><strong>Slightly more involved tl;dr:</strong></p><p>There will be one “XMSS Registry” Contract which keeps a mapping (think: a phone book) of Ethereum addresses ←→ XMSS public keys. This contract will deploy a unique instance of a PQ-secure multi-signature wallet for any individual caller who provides an XMSS public key. The XMSS key will serve as an additional layer of protection for any funds stored in the PQ-secure multi-signature wallet, and once deposited, funds will only be able to be moved by a valid transaction from the associated Ethereum address + a valid XMSS signature (verified by the “XMSS Registry” contract) on the details of the desired transaction.</p><p>In addition to this protection functionality, the main “XMSS Registry” contract will also be able to deploy “eQRTs” (Ethereum Quantum Resistant Tokens). These tokens provide all the functionality in the ERC-20 specification, but can only be sent between users with associated XMSS public keys (upon successful XMSS signature verification).</p><p><em>It should be noted that the transaction costs for these functions are very high,</em><strong><em> </em></strong>although we are working to optimize the contracts and otherwise bring the gas cost down. At this stage, it makes sense primarily to secure ETH and ERC-20s from the risk of a quantum-computer attack when the funds do not need to be moved frequently. An XMSS signature verification could cost upwards of 5M gas (anywhere from $2-$16, depending on network congestion and desired speed, at current ETH/average gwei rates), making frequent outbound transactions from a PQ-secure multi-sig wallet expensive. The QRL Foundation will pursue a third-party audit of our code before deploying it to the main network.</p><blockquote>The QRL Foundation foresees a world where global and digital economies rely on blockchain networks, and believes that before digital securities can be issued — or before ownership of assets can be widely tokenized in general — organizations and individuals will need to be certain that their digital assets cannot be compromised by a sudden advance in quantum-computing technology. Today, that guarantee is only available on the QRL main network, which has been operational, secure, and third-party audited since the summer of 2018.</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*xszcNzQ6zibFBxQ3" /><figcaption>An early design diagram of the Enqlave system</figcaption></figure><p>A primary design requirement was to keep track of XMSS public keys and signatures — one quirk of XMSS (and the main aspect which prevents it from being a silver-bullet replacement for today’s internet public-key security infrastructure) is its “stateful” nature. An XMSS public key actually represents a “tree” of One-Time Signature (OTS) keys, meaning that a user’s security could be compromised if they were to sign two different messages with the same OTS key. In ECDSA and other common digital signature algorithms, there is no notion of “multiple” keys (aside from public-private), and you can not “run out” of signatures.</p><p><strong><em>XMSSAccount Management:</em></strong></p><p>&lt;script src=”<a href="https://gist.github.com/doctor-gonzo/5800ca112242e16f45de5ec6c6a69c98.js">https://gist.github.com/doctor-gonzo/5800ca112242e16f45de5ec6c6a69c98.js</a>&quot;&gt;&lt;/script&gt;</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/b6509ce77c71a4dc99735d579ed28012/href">https://medium.com/media/b6509ce77c71a4dc99735d579ed28012/href</a></iframe><p>The implication of XMSS’s stateful nature for the QRL Enqlave project is that the OTS index (the next free One-time Signature to be used) is a crucial value for each XMSS public key, which must be strictly tracked and maintained. In our contracts, if you use up an OTS but the transaction otherwise fails (if the value argument supplied was greater than the balance of your PQ-secure multisig, for example), you have still used up one OTS key.</p><p>As a result of being able to “run out” of signatures, there exists a need to be able to “replace” an XMSS public key which has run out of One-Time Signatures. We have designed our contracts so that a user can only use their last OTS in order to replace their current XMSS public key, thus providing a guarantee that nobody can be “locked out” and that there is a way for users to replenish their supply of One-Time Signatures to make transactions with. The default tree-height of an XMSS public key generated using QRL’s interface allows for 1024 such OTS / transactions.</p><p><strong><em>Functions for “Typical” and “Power” users:</em></strong></p><p>Another design decision was to accommodate a wide range of potential users. While recognizing that most users will be well-served by a single XMSS public key (with a default of 1024 OTS), we wanted to design our contracts to be future-proof in every way possible. As a result, we have included functionality for “power users” — potential future users (exchanges, businesses deploying security tokens, etc) who might want to have more than one XMSS public key associated with their Ethereum address, or those who might want to make an XMSSAccount without deploying the PQ-Secure multisig (those who only want to use eQRT functionality, for example, where the token never “leaves” the eQRT contract to be “stored” in another Ethereum address).</p><p>This flexibility was accomplished by using Solidity’s function overloading capabilities. For every user-facing function, there are two versions — one for the typical user, and one for the power user (where additional relevant arguments can be passed in). As is standard programming practice, each of these duplicate functions in turn calls the same internal function with separate parameters to eliminate code duplication.</p><p><strong><em>eQRTs:</em></strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/480/0*8SSMzQAuLTJTRcvv" /><figcaption>Inside the constructor of the “Registry” Contract, an eQRTFactory is deployed</figcaption></figure><p>All generated eQRTs (deployed by a linked “eQRTFactory”) refer back to the main XMSS registry account for XMSS signature verification.</p><p>The deployers of eQRTs will be able to (optionally) leverage the advantages of GSN (the “Gas Station Network”), which allows for “meta-transactions”. In other words, someone will be able to interact with the eQRT contract from an ethereum address with 0 ETH (not enough to cover even small transaction fees), because the eQRT contract will be able to pay for such transactions (according to the deployer’s arbitrary criteria / GSN “strategy”). This was included for future-proofing purposes, because it significantly eases the onboarding process of certain applications.</p><p><strong><em>OpenZeppelin:</em></strong></p><p>Where possible, we have used primitives and building blocks provided by OpenZeppelin. An example is our ERC-20 code — we use the already-audited implementation provided by OpenZeppelin, with the only modification being a requirement for a valid XMSS signature before processing certain transactions.</p><p>It is our hope that this will make auditing our code easier. We would like to thank OpenZeppelin for the extremely valuable open-source infrastructure they have built.</p><p><strong><em>Moving Forward:</em></strong></p><p>As a part of making this tool accessible to members of the QRL and Ethereum communities, we are developing a web-interface and will work towards integration with the Nano Ledger family of devices (a feature many users of both QRL and Ethereum are accustomed to).</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/769/1*D_kDQt8eZSMue5WjC3IrLQ.gif" /><figcaption>An alpha-stage version of the front-end in action</figcaption></figure><p>QRL’s primary focus is security, and we will uphold the same technical rigor that has gone into the other parts of our ecosystem (the cryptography and blockchain implementations, respectively) to this venture. We will obtain and release a third-party audit before deploying our contracts to the Ethereum mainnet. We hope that this tool can provide value for Ethereum users and bring wider awareness to the pioneering work of the QRL project in the realm of digital asset security.</p><p><strong>An introduction to the author:</strong></p><p>I am a core QRL dev who joined the team in 12/2019 and am very excited for the future of QRL and Ethereum. If you have any questions about these Smart Contracts, or the system as a whole, feel free to tag me at @dr_gonzo in the QRL discord.</p><p><em>A final note: a significant portion of the heavy-lifting on this project — the EVM-assembly-optimized XMSS Signature verification code — was performed by longtime QRL developer Kaushal Singh (Ed — is he human or machine?).</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=31df477c543" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/the-qrl-enklave-project-bringing-post-quantum-security-to-ethereum-and-other-blockchain-platforms-31df477c543">The QRL Enqlave Project — Bringing Post-Quantum Security to Ethereum and other blockchain platforms</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Enqlave — the quantum safe for your crypto assets]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/enqlave-the-quantum-safe-for-your-crypto-assets-beaf9e933725?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/beaf9e933725</guid>
            <category><![CDATA[post-quantum]]></category>
            <category><![CDATA[vault]]></category>
            <category><![CDATA[secure]]></category>
            <category><![CDATA[cold-storage]]></category>
            <dc:creator><![CDATA[Peter Waterland]]></dc:creator>
            <pubDate>Mon, 18 May 2020 19:30:14 GMT</pubDate>
            <atom:updated>2020-05-19T21:53:45.018Z</atom:updated>
            <content:encoded><![CDATA[<h3>enQlave — the quantum safe for your crypto assets</h3><p>The original idea behind QRL was to create a standalone post-quantum secure financial blockchain and in doing so fix a major security exploit present in virtually every other crypto asset in existence — the risk of quantum theft.</p><p>Time has marched on:QRL mainnet has just surpassed a height of one million blocks, NIST has begun to approve XMSS (which powers QRL) for post-quantum usage, randomX mining distribution is healthy and the network node count near an all time high.</p><p>But still the vast majority of the considerable crypto asset space remains unprotected. And quantum risk grows with higher crypto asset valuations looming and QC development beginning to bear fruit.</p><p>Whilst our development team works to integrate OCAML smart contracts into our next fork — very exciting as this introduces amazing functionality — we have been working on a tangential move since the end of 2019 to bring the QRL to a much wider audience and raise the profile of the project considerably with a new wallet called <strong>enQlave </strong>.</p><h3>What is it?</h3><p>EnQlave wallet is an ethereum webwallet which allows any user to secure their ether or erc20 token balances from quantum theft.</p><p>It also brings the very first post-quantum secure token to ethereum — which of course is the QRL.</p><h3>Why ethereum?</h3><p>Ethereum is the first platform we have chosen for enQlave to natively support. The reason for this is largely down to the maturity of the EVM, the size of the existing userbase, and the combined market cap of ethereum and erc20-based projects (currently 45 of the top 100 on CMC).</p><p>In our first iteration we will be able to offer post-quantum security to a very significant unprotected percentage of the entire crypto asset space. If we gain traction we will add support to other promising smaller smart contract platforms such as tezos, eos, stellar etc.</p><h3>How does it work?</h3><p>Through a simple UI and compatible with the ledger hardware wallet, enQlave is a non-custodial hybrid post-quantum secure multi-sig ethereum wallet (quite a mouthful).</p><p>Behind the scenes, each wallet instance creates a smart contract on ethereum and generates a unique post-quantum secure contract address. This is your enQlave wallet address and with it you may receive ether or erc20 tokens like any normal ethereum address.</p><p>The magic begins when you move funds out of the wallet.</p><p>A normal address requires you to simply sign a transaction with your ethereum private key to move funds— something done under the hood by your wallet software or hardware wallet.</p><p>Moving funds out of your post-quantum secure contract address requires both a standard ethereum ECDSA signature but also an XMSS signature from an XMSS public key linked during the setup phase.</p><p>The enQlave wallet signs each outbound transaction with both ECDSA and XMSS — potentially from one or more hardware wallets depending upon your security paranoia level.</p><p>Without both valid signatures no funds can leave your enQlave address and so the enQlave wallet is ultra cold storage — <strong><em>removing the future risk of quantum threat for the first time in an address you can re-use at will</em></strong>.</p><h3>Wait did you say XMSS on ethereum?</h3><p>Using assembly optimisation we have managed to code functional XMSS signature verification on ethereum. To squish the computation down as much as possible we have stretched the signature size compared with the QRL mainnet.</p><p>It has a gas heavy per transaction cost but for an ultra cold storage solution potentially securing billions of dollars of crypto assets we do not see this as a problem.</p><h3>QRL back on ethereum?</h3><p>With the ability to verify XMSS signatures on ethereum comes the need to track XMSS tree state. To do this we have designed and built an XMSS registry smart contract on ethereum which allows the potential for XMSS powered tokens to run natively on ethereum.</p><p>The first and only planned such post-quantum secure token is QRL. We will be adding an easy way to hop your QRL between the native QRL webwallet and an enQlave ethereum wallet address (or visa versa) and a blog post detailing the mechanics of this bridge is coming in the near future.</p><h3>Can I see the prototype?</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*Sf9TQYn9L3v2si9DZvePJg.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*95Afxvvut7wI35JDEJZjGQ.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/555/1*U-_9qQ2AwSllFc9Qos8pzg.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/559/1*tBPjjFOtbN8LPYnYr0pjBg.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*VbV7E47ki_rvjpDk0c8XSw.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/527/1*LHADqouPalb7gSHLT3RB-w.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/511/1*x4KhWKtk77zovV7l9jLo0w.png" /><figcaption>Unskinned prototype front end</figcaption></figure><p>Here are some screenshots from the latest build which is currently running on a private ethereum network. Remember this is as yet unskinned and the final appearance will change considerably as we move towards production, beautify things and simplify the UI.</p><h3>What is left before this reaches production?</h3><p>A smart contract audit, some ledger integration and lots of testing before we move to ethereum mainnet.</p><h3>Can i take a deep dive into how this works?</h3><p>As always our code will be open source and our repo will soon be going public on github in our theqrl repo.</p><p>A video detailing the backend mechanics can be seen <a href="https://player.vimeo.com/video/420287807">here</a>. Additionally, <a href="https://medium.com/the-quantum-resistant-ledger/the-qrl-enklave-project-bringing-post-quantum-security-to-ethereum-and-other-blockchain-platforms-31df477c543">here</a> is a teaser blog from our new core dev Charlie to wet your appetites before we open up the prototype for public testing at https://enQlave.io</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=beaf9e933725" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/enqlave-the-quantum-safe-for-your-crypto-assets-beaf9e933725">Enqlave — the quantum safe for your crypto assets</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[New mining platform integration and guide: Mine QRL on MMP OS]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/new-mining-platform-integration-and-guide-mine-qrl-on-mmp-os-dc28d8e6693e?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/dc28d8e6693e</guid>
            <category><![CDATA[cryptocurrency-mining]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Sat, 16 May 2020 17:32:13 GMT</pubDate>
            <atom:updated>2020-05-16T17:46:05.712Z</atom:updated>
            <content:encoded><![CDATA[<h4>MMP OS: Miner management made easy</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/1*GML4ND2rZXw4ij8IRh82EQ.png" /></figure><p>It’s possible to mine QRL with XMRIG on your <a href="https://docs.theqrl.org/mining/mining/">Windows or Linux machine</a>, but if you want to expand your mining operation to more than one machine, it’s useful to look into mining platforms like <a href="https://app.mmpos.eu/">MMP OS</a> — <strong>which we’re now happy to be supported on!</strong></p><p><a href="https://app.mmpos.eu/">MMP OS</a> gives you the ability to manage multiple different computers (mining rigs) from the comfort of your browser window.</p><p>The things you can do from one location includes:</p><ul><li>Status updates for each mining rig. Easily glean the overall status, power usage, hashrate, temperature and other key indicators of a healthy mining rig</li><li>Ability to disable or restart the miner.</li><li>Sum hashrate and average shares of all mining rigs</li><li>Add/remove/reconfigure mining pools</li><li>Add/remove/reconfigure wallets</li><li>Add/remove/reconfigure mining profiles</li></ul><p>In short, the MMP (Miner Management Platform) and the corresponding <a href="https://app.mmpos.eu/">MMP OS</a> makes managing mining QRL a breeze.</p><h3>Getting started</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*O3TC-yc5Gs0gNyDs6DenwA.jpeg" /><figcaption>Manage your QRL mining empire on the go from your phone!</figcaption></figure><p>While MMP OS makes things as easy as possible, there’s still a few more steps involved in getting everything setup than with your local xmrig configuration. In this guide, we’re going to get setup on Windows, but it’s possible to get everything setup on Linux as well with the same principles applied here.</p><h4>Step 1: Signup</h4><p>Go to <a href="https://app.mmpos.eu/register">https://app.mmpos.eu/register</a> and register.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*4vKGdsu-8pLvyMPz_Ft0DA.png" /></figure><h4>Step 2: Login and download the Windows Agent</h4><p>You’ll get two options here, one is to download <em>mmpOS </em>or the <em>Windows Agent</em>. This guide is going to take you through installing the Windows Agent, but if you’re setting up multiple rigs, you’ll want to get mmpOS.</p><p>After downloading, extract the contents of the zip folder and click on ‘agent’. This agent will be listening for commands we give it later in this guide. Leave it open.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*YeEulCVJbQoj9vg7vZS_GA.png" /></figure><h4>Step 3: Create a QRL Wallet and get its Address</h4><p>You can follow our documentation guide, but it should be straightforward to go to <a href="https://wallet.theqrl.org">https://wallet.theqrl.org</a> and create a wallet there.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*DGs0f3mOth1delc6bgvN5w.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*Y9EmSa0e4B7kmV-ZKqiNaQ.png" /></figure><h4>Step 4: Add wallet address to mmpOS</h4><p>Click on wallets in the sidebar of the mmpOS web interface or go to <a href="https://app.mmpos.eu/wallets/">https://app.mmpos.eu/wallets</a> to add a wallet. Make sure you select “Quantum Resistant Ledger”</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*VK82Wqn10Ml7_pwoWNTWYw.png" /></figure><h4>Step 5: Add a pool</h4><p>Click on pools in the sidebar of the web mmpOS interface or go to <a href="https://app.mmpos.eu/pools/">https://app.mmpos.eu/pools/</a> to and click Add Pool in the top right hand corner.</p><p>You can find pool information in our documentation at <a href="https://docs.theqrl.org/mining/pools/">https://docs.theqrl.org/mining/pools/</a>.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*EXY67Kx-cO8TUIh2Kk0UDQ.png" /></figure><h4>Step 6: Add a miner profile</h4><p>A miner profile combines a miner with a pool selected. Because your miner is going to be on Windows and we’re mining with randomx, change the platform to <em>Windows </em>and Miner to <em>xmrig randomx</em>.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*E6WIAATXpxJJWVyGGowyGQ.png" /></figure><h4>Step 7: Add a mining rig</h4><p>If you haven’t already, launch the agent from the extracted folder in Step 2</p><p>Then go to rigs in the sidebar of the web mmpOS interface or visit <a href="https://app.mmpos.eu/rigs">https://app.mmpos.eu/rigs</a> and click on <em>Add rig</em>.</p><p>Because the agent is on the same system, you should be able to automatically register it by clicking on “Automatically register”. When you do so, you should see activity in your agent console window.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*4QUkx67BSSYL24SvId8MKg.png" /></figure><h4>Step 8: Configure the miner rig</h4><p>Click on your mining rig name and make sure everything is setup correctly. If no mining profile is selected, select the one you made earlier.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*91TrViuJSL7BUcs5mRzv5w.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*E0j6PBsdHE69QeIGawQniw.png" /></figure><h4>Step 9: That should be it!</h4><p>The agent will download the selected miner and start mining. After a few minutes, you’ll start to see charts display.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*Qzz5oXKQ82eX1j-pdApCWw.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*uIXaPU6mbK7iSAh-N29FaA.png" /></figure><h4>Step 10: Stuck? Get help</h4><p>mmpOS has a <a href="https://discord.gg/P5J6Z5h">discord </a>and <a href="https://t.me/mmpos_intl">telegram</a> with people that are always willing to help.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=dc28d8e6693e" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/new-mining-platform-integration-and-guide-mine-qrl-on-mmp-os-dc28d8e6693e">New mining platform integration and guide: Mine QRL on MMP OS</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[New Exchange Listing — Bitvoicex]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/new-exchange-listing-bitvoicex-a8ad4855e05c?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/a8ad4855e05c</guid>
            <category><![CDATA[exchange-listing]]></category>
            <category><![CDATA[bitvoicex]]></category>
            <category><![CDATA[quantum-resistant-ledger]]></category>
            <category><![CDATA[qrl]]></category>
            <dc:creator><![CDATA[Adam Koltun]]></dc:creator>
            <pubDate>Sat, 09 May 2020 00:01:01 GMT</pubDate>
            <atom:updated>2020-05-09T00:01:01.160Z</atom:updated>
            <content:encoded><![CDATA[<h3>New Exchange Listing — Bitvoicex</h3><p><em>QRL is now trading on Bitvoicex</em></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/1*PxJ6HjOz25pGoRKqGhGRfw.png" /></figure><h3>What is BitVoiceX?</h3><p><a href="https://bitvoicex.net/">Bitvoicex</a> is an exchange, operated in Taiwan, that is primarily targeted at the Asian market. Bitvoicex is in a cooperative partnership with Bittrex, and is a global digital asset trading platform. For more information on their partnership, check out their blog post on it <a href="https://bitvoice.zendesk.com/hc/zh-cn/articles/360039440992-Bitvoicex">here</a>.</p><p>In their About Us section, Bitvoicex says that, “It mainly provides high-quality digital asset trading services to global users. Provide secure, reliable and convenient digital asset trading services.”</p><p>Bitvoicex has two base pairs — BTC and USDT, and a growing list of currencies traded against them.</p><h3>How Do I Access QRL On BitVoiceX?</h3><p>To access QRL on <a href="https://bitvoicex.net/markets/qrl_btc">Bitvoicex</a>, you will first need to <a href="https://bitvoicex.net/register">register for an account on Bitvoicex</a>.</p><p>After making the account, you will be able to deposit, withdraw, and trade QRL on their <a href="https://bitvoicex.net/exchange?symbol=ETH_BTC">markets</a> once QRL goes live April 3rd.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=a8ad4855e05c" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/new-exchange-listing-bitvoicex-a8ad4855e05c">New Exchange Listing — Bitvoicex</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[QRL now listed on Swapzone.io]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/qrl-now-listed-on-swapzone-io-d913aafea41?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/d913aafea41</guid>
            <category><![CDATA[exchange]]></category>
            <category><![CDATA[blockchain]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Wed, 06 May 2020 20:46:01 GMT</pubDate>
            <atom:updated>2020-05-06T23:40:59.089Z</atom:updated>
            <content:encoded><![CDATA[<h4><a href="https://swapzone.io/">Swapzone</a> is an instant cryptocurrency exchange aggregator with 300+ assets for exchange.</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/1*W_uFdE7we5UAPNsOG9pkbA.png" /></figure><h3>How to exchange QRL on Swapzone?</h3><p>To get QRL on Swapzone is as simple as:</p><ol><li>Go to <a href="https://swapzone.io/?to=qrl">Swapzone</a>.</li><li>Select the currency you want to exchange in the Deposit list.</li><li>Select QRL in the Receive list (automatic if following the link above).<br><em>You will see the best rates from our partners in the next field. You just need to choose the most profitable one.</em></li><li>Click the ‘Exchange’ button to proceed.</li><li>In the Exchange field enter the amount you want to exchange.<br>- You will then see the estimated amount you are going to receive after exchange. <br>- Please note that the amount you see can be changed due to current rate fluctuation.</li><li>Enter the recipient’s wallet address. <br>Make sure you have entered a correct address. The exchanged currency will be sent to this address. <br>Check the information once again.</li><li>Press ‘Proceed the Exchange’ button, if everything is correct.</li><li>Send the amount you want to exchange to the deposit address in the Top up field.</li><li>Exchange process takes 5–50 min (depends on the exchange partner) and Voila! you’re ready to go with you freshly exchange QRL.</li></ol><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=d913aafea41" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/qrl-now-listed-on-swapzone-io-d913aafea41">QRL now listed on Swapzone.io</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Integration feature: New Mining Pool — NewPool Cool]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/integration-feature-new-mining-pool-newpool-cool-67914cf0ce6b?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/67914cf0ce6b</guid>
            <category><![CDATA[cryptocurrency-mining]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Tue, 14 Apr 2020 16:01:00 GMT</pubDate>
            <atom:updated>2020-04-14T16:16:40.807Z</atom:updated>
            <content:encoded><![CDATA[<h3>Integration feature: New Mining Pool — NewPool Cool</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/1*rgNfIOeaxgTBByNvQntS-Q.png" /></figure><h3>Overview</h3><ul><li>URL: <a href="https://qrl.newpool.cool">https://qrl.newpool.cool</a></li><li>QRL Docs URL: <a href="https://docs.theqrl.org/mining/pools/#newpool-cool">https://docs.theqrl.org/mining/pools/#newpool-cool</a></li><li>Default Stratum: qrl.newpool.cool:4444</li><li>Pool Fee: 0.5%</li><li>Minimum payout: 1 QRL</li><li>Payment Interval: 30 minutes</li></ul><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=67914cf0ce6b" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/integration-feature-new-mining-pool-newpool-cool-67914cf0ce6b">Integration feature: New Mining Pool — NewPool Cool</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Video: How to Mine QRL Quanta — EP006]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/video-how-to-mine-qrl-quanta-ep006-545c2f4b2a6d?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/545c2f4b2a6d</guid>
            <category><![CDATA[cpu-mining]]></category>
            <category><![CDATA[xmrig]]></category>
            <category><![CDATA[cryptocurrency-mining]]></category>
            <category><![CDATA[quantum-computing]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Mon, 13 Apr 2020 16:01:01 GMT</pubDate>
            <atom:updated>2020-04-13T16:01:01.022Z</atom:updated>
            <content:encoded><![CDATA[<h3>Video: How to Mine QRL Quanta — EP006</h3><h4>A step-by-step guide on how to mine Quanta on a windows computer</h4><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F5e7FK7A7svU%3Ffeature%3Doembed&amp;display_name=YouTube&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D5e7FK7A7svU&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F5e7FK7A7svU%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube" width="854" height="480" frameborder="0" scrolling="no"><a href="https://medium.com/media/fbfdabf7424e07062c3c4a4af79f3918/href">https://medium.com/media/fbfdabf7424e07062c3c4a4af79f3918/href</a></iframe><h3>Video Transcription</h3><h4>Introduction</h4><p>Welcome to the official Quantum Resistant Ledger channel, your video portal into post quantum digital asset security.</p><p>The first week of April 2020 has been an exciting one. With QRL 2.0 comes multisignature transactions, support for an ephemeral messaging system, multiple improvements and enhancement across different code suites, and of course the RandomX PoW protocol. We covered what <a href="https://www.youtube.com/watch?v=S0ETCcT3vGY">RandomX was in a previous video</a>, jump to that video if you have not seen it yet for a high level view. This video is going to be for Windows users that want to start mining Quanta right way. I’ll walk you through step by step and a list of pools can be found on our site at <a href="http://www.theqrl.org">www.theqrl.org</a>. Lengthy intros are annoying, so let’s get down to it.</p><h4>Steps covered in the Video</h4><ol><li><strong>Antivirus Software [</strong><a href="https://youtu.be/5e7FK7A7svU?t=65"><strong>1:05</strong></a><strong>]</strong></li><li><strong>Firefox Whitelisting and Exceptions[</strong><a href="https://youtu.be/5e7FK7A7svU?t=126"><strong>2:06</strong></a><strong>]</strong></li><li><strong>Create a new wallet [</strong><a href="https://youtu.be/5e7FK7A7svU?t=150"><strong>2:30</strong></a><strong>]<br></strong>Webwallet link: <a href="https://wallet.theqrl.org/">https://wallet.theqrl.org/</a></li><li><strong>Download xmrig [</strong><a href="https://youtu.be/5e7FK7A7svU?t=187"><strong>3:07</strong></a><strong>]<br></strong>Download: <a href="https://github.com/xmrig/xmrig/releases/latest/">https://github.com/xmrig/xmrig/releases/latest/</a></li><li><strong>Extract xmrig [</strong><a href="https://youtu.be/5e7FK7A7svU?t=295"><strong>4:55</strong></a><strong>]</strong></li><li><strong>Edit xmrig config.json file [</strong><a href="https://youtu.be/5e7FK7A7svU?t=305"><strong>5:00</strong></a><strong>]<br></strong>Mining pools: <a href="https://docs.theqrl.org/mining/pools/">https://docs.theqrl.org/mining/pools/</a></li><li><strong>Run xmrig [</strong><a href="https://youtu.be/5e7FK7A7svU?t=393"><strong>6:33</strong></a><strong>]</strong></li><li><strong>Bullet points [</strong><a href="https://youtu.be/5e7FK7A7svU?t=551"><strong>9:10</strong></a><strong>]</strong></li></ol><h4>Bullet points</h4><p>OK, I hope those steps were helpful, here are a few important bullet points to remember.</p><ol><li>If you can, tune your RAM above 2133Mhz. Nearly all modern DDR RAM out there now is designed for a fast clock speed. There are some discussions in our Discord community and lots of videos on Youtube.</li><li>Clock speed is important, but not at the cost of stability. If you overclock your CPU or RAM and the system becomes unstable, any gains you would have received from a higher clock rates will be lost when you come back and find out your PC went on holiday or PTO and didn’t tell you first. This can be upsetting so remember to always run some sort of utility to stress test CPU and RAM if you take this route.</li><li>If you run XMRIG, make sure you run it as Administrator. This allows it to use huge pages and set CPU register values if needed. Which can increase your hashrate substantially. At the time of this video, the latest version is 5.10.</li><li>If you actually want to be able to USE your PC while you mine, edit the config.json file in XMRIG to disable one or two CPU cores or threads. Noooooootttt you wallet.json file! This way, your system can mine and stay usable, you might even be able to still watch Netflix while your PC mines Quanta in the background.</li><li>And of course, don’t forget to run a node. It’s super easy to get one up and running, supports the project, and doesn’t take up minimal CPU resources</li></ol><p>One last thing, if you have questions, ASK. You can reach me for mining questions on Discord as Strike Attack #8102 with questions. I do my best to answer all the mining questions that get asked or go unanswered.</p><p>Thanks for watching, happy mining!</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*Ebwwj7G-vTx7rHGnFtGpOw.png" /></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=545c2f4b2a6d" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/video-how-to-mine-qrl-quanta-ep006-545c2f4b2a6d">Video: How to Mine QRL Quanta — EP006</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The QRL Bromine Hardfork: A look inside]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/the-qrl-bromine-hardfork-a-look-inside-2eed61ea90fd?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/2eed61ea90fd</guid>
            <category><![CDATA[encryption]]></category>
            <category><![CDATA[messaging]]></category>
            <category><![CDATA[audit]]></category>
            <category><![CDATA[blockchain-technology]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Tue, 07 Apr 2020 20:38:48 GMT</pubDate>
            <atom:updated>2020-04-07T20:38:48.235Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*A58S4XszIgYoxfCB3g1JRQ.png" /></figure><h4>Quantum secure weighted threshold multisignature addresses &amp; transactions, ephemeral messaging LatticeTX, and RandomX land in QRL mainnet.</h4><p>From the beginning, we have been passionate about driving the solutions to prepare for the next revolution in secure digital asset storage.</p><p>This was demonstrated in 2018 with the launch of the first usable quantum secure enterprise-grade blockchain backed by the stateful signature scheme XMSS, as opposed to ECDSA found in many blockchains. <a href="https://tools.ietf.org/html/rfc8391">XMSS</a> is now currently slated as a <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-208-draft.pdf">draft recommendation</a> by the <a href="https://www.nist.gov/">National Institute of Science and Technology (NIST)</a>.</p><p>Our launch was further accompanied by a full suite of tools:</p><ul><li>Desktop wallets for <a href="https://github.com/theQRL/qrl-wallet/releases/latest">Linux, Mac, and Windows Web</a></li><li>A <a href="https://wallet.theqrl.org">web wallet</a> with the full functionality of the desktop wallet.</li><li>Explorer, both on the <a href="https://explorer.theqrl.org">web</a> and bundled as part of the desktop wallet clients.</li><li>An API along with <a href="https://docs.theqrl.org">extensive documentation</a></li><li>Colored Token functionality through QRT’s</li><li>Two audits by <a href="https://medium.com/the-quantum-resistant-ledger/red4sec-security-audit-concludes-a-summary-563ecfe04c75">Red4Sec</a> and <a href="https://github.com/theQRL/audits/blob/master/X41-theQRL-Review-2018-Final-Report.pdf">x41 D-sec</a></li><li><a href="https://docs.theqrl.org/developers/address/">Flexible address format designed to be extensible and support a wide range of signature schemes and hash functions.</a></li></ul><p>Which we continued to improve upon our network by adding things like:</p><ul><li>An <a href="https://github.com/theQRL/offline-wallet-generator">offline wallet generator</a></li><li>Mobile wallets for <a href="https://apps.apple.com/us/app/qrl-wallet/id1458620542">iOS</a> and <a href="https://play.google.com/store/apps/details?id=com.theqrl&amp;hl=en">Android</a></li><li>Hardware wallet support with the <a href="https://support.ledger.com/hc/en-us/articles/360019184453-Quantum-Resistant-Ledger-QRL-">Ledger Nano S/X</a></li><li>Multiple API’s documented at <a href="https://api.theqrl.org">api.theqrl.org</a></li><li>A <a href="https://docs.theqrl.org/developers/qrl-cli/">qrl-cli</a> for easy command-line usage</li><li>Quantum resistant <a href="https://docs.theqrl.org/tools/notarisation/">notarisation</a></li><li><a href="https://docs.theqrl.org/tools/keybase/">Keybase integration</a></li><li><a href="https://hub.docker.com/r/qrledger/qrl-docker">Docker QRL node support</a></li></ul><p>And with this hardfork, Bromine, we’re adding/improving:</p><ul><li><a href="#3065">Weighted threshold multisignature transactions</a></li><li><a href="#ff89">Ephemeral Messaging LatticeTX</a></li><li><a href="#2cb2">RandomX</a></li></ul><p>Still to look forward to are:</p><ul><li>Smart contracts</li><li>Proof-of-Stake</li><li>On-chain voting</li><li>Proposals that have passed through the <a href="https://github.com/theQRL/qips">QRL Improvement Proposals (QIP)</a> process</li></ul><p>For the <strong>QRL Bromine hardfork</strong>, a special thanks goes out The QRL Contributors group, as well as the 48 contributors with 7,888 commits over the years that helped in innumerable ways.</p><h3>Major changes</h3><h4>Weighted threshold multisignature addresses &amp; transactions</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1004/1*SsXFrl3CxVK5xmtKSObdAQ.png" /></figure><p>Critical to any trustless (and trusted) system is the ability to handle different methods of governance on how allocated funds can be spent.</p><p>For this to work, during the creation of a multisig address, one or more signatories (addresses) are assigned and a final threshold to spend is set. Any signatory can then create a <em>spend request</em> (which is a proposed transaction to be voted on) with a final expiration date in the form of a block-height. If enough people vote to approve the transaction and meet or exceed the set threshold <em>before</em> that block-height is reached, the transaction goes through.</p><p>Examples use-cases for this are numerous, including:</p><ul><li><strong>Petty joint account:</strong> Any signatory party can spend funds. Often used between two individuals with an established level of trust (couples).</li><li><strong>Two-factor Authentication address: </strong>As a way to add an extra level of security, it’s possible to setup a multisig address with two signatories, with the credentials spread between different devices and/or locations. In order to spend, a vote from both signatories would be required.</li><li><strong>Committee in control of funds</strong>: Allows for a select number of committee members to approve the spending of funds.</li></ul><p>The <em>weighted threshold </em>aspect refers to the ability to assign <em>variable weights</em> to any signatory. So in the committee example, it’s possible that a few members are higher ranking (whether by seniority or otherwise) and could be assigned a higher weight.</p><p>More information on this can be found in a<a href="https://medium.com/the-quantum-resistant-ledger/post-quantum-secure-multisignature-wallets-321f75323e50"> historic blog of ours (Oct-2018)</a>.</p><p>Multisignature transactions functionality can be found in our desktop wallet in both <a href="http://github.com/theQRL/qrl-wallet/releases/latest">binary (for Windows, Mac, and Linux)</a> and on the <a href="https://wallet.theqrl.org">web</a> under the tools section. This is also accessible with the <a href="https://docs.theqrl.org/wallet/wallet-cli/">qrl node cli</a>.</p><h4>Ephemeral messaging (LatticeTX)</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1004/1*-we4MriMrfHaAcVInWkcgQ.png" /></figure><p>The Ephemeral Messaging System allows peer-to-peer messaging which is able to secure messages (or any data really) back and forth — and in the future with GO-QRL, utilize the QRL network to do so.</p><p>This is all done utilizing the quantum resistant key encapsulation and digital signature algorithms <a href="https://pq-crystals.org/kyber/">Kyber</a> and <a href="https://pq-crystals.org/dilithium/">Dilithium</a>. To <em>further</em> increase security, these quantum resistant algorithms are combined with pre-quantum schemes that have been proven secure against classical computers.</p><p>To derive the keys for encryption and signatures, only the master seed of the wallet is used. Public keys are securely stored by a lattice transaction (LatticeTX) and associated to a QRL address, which can be seen as an identity. By deploying this functionality, the QRL blockchain can also serve as a standalone public-key infrastructure by any third-party application.</p><p>You can use qrl-cli to interact: <a href="https://github.com/theQRL/qrl-cli/">https://github.com/theQRL/qrl-cli/</a></p><p>As mentioned before, for the moment, you’ll still need to create your own <em>off-chain network</em>, but this sets the stage for GO-QRL, where everything can be incorporated on-chain for a fully decentralized, quantum secure, ephemeral messaging network!</p><h4>RandomX</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*C9sTRGLU4OI357N7L1oLEw.jpeg" /><figcaption>Art created by Discord user Smith</figcaption></figure><p>QRL initially launched mainnet with cryptonight variant 1 (cn/1) due to its commitment to security (it was extensively reviewed) and its ability to avoid ASIC’s from centralizing the hashrate of the network. As time has gone on however, we’ve seen an increase of centralization to fewer miners.</p><p>While no PoW mining algorithm can completely avoid the progress of ASICS and FPGA’s, there’s been some implementations that show more promise than others. RandomX is one of those algorithms that shows promise.</p><p>As indicated <a href="https://github.com/tevador/RandomX">from their github</a>, RandomX is a proof-of-work (PoW) algorithm that is optimized for general-purpose CPUs. RandomX uses random code execution (hence the name) together with several memory-hard techniques to minimize the efficiency advantage of specialized hardware.</p><p>Beyond that, it’s critical that any algorithm that underpins the security of the network undergoes a thorough peer-review process. To that end, RandomX has been reviewed by 4 independent security research firms.</p><ul><li><a href="https://www.trailofbits.com/">Trail of Bits</a></li><li><a href="https://www.x41-dsec.de/">X41 D-SEC</a></li><li><a href="https://www.kudelskisecurity.com/">Kudelski Security</a></li><li><a href="https://quarkslab.com/en/">QuarksLab</a></li></ul><h3>Other minor changes</h3><h4>Environment switch</h4><p>Ability to toggle mainnet or testnet with a network-type argument to `start_qrl`.</p><p><em>Note: To run both at the same time, it’s still necessary to change ports in config.yml of one of the nodes to avoid conflicts.</em></p><h4>Added addr_to field in message transaction</h4><p>Now an address can be added to an 80 byte message transaction, allowing for assignable messages on the blockchain.</p><h4>Added message_data to transfer transaction</h4><p>Allows for on-chain transactions to include references to transaction ID’s in things like e-commerce applications.</p><h4>Other</h4><ul><li>New API has been added to support data related to new transactions</li><li>Address State has been optimized</li><li>Block reorg limit has been reduced from 22,000 to 300 blocks</li><li>Legacy API support for wallet daemon &amp; grpcProxy</li><li>grpcProxy &amp; wallet daemon both support — network-type as an argument</li><li>Updated versions for some of the dependencies</li><li>Added more unit tests covering different scenarios</li></ul><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/1*gOrStBxFYBOQaq1yBNkhVA.png" /></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=2eed61ea90fd" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/the-qrl-bromine-hardfork-a-look-inside-2eed61ea90fd">The QRL Bromine Hardfork: A look inside</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Integration feature: Bromine hardfork pool — Fungibly]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/integration-feature-bromine-hardfork-pool-fungibly-6d3d3a953da5?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/6d3d3a953da5</guid>
            <category><![CDATA[mining-pool]]></category>
            <category><![CDATA[cryptocurrency-mining]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Tue, 07 Apr 2020 14:31:00 GMT</pubDate>
            <atom:updated>2020-04-07T14:31:00.863Z</atom:updated>
            <content:encoded><![CDATA[<h3>Integration feature: Bromine hardfork pool — Fungibly</h3><h4>Fair and transparent QRL mining pool</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/1*Ld2FGgse0jtwnwZFh2_CFg.png" /></figure><h4>Overview</h4><ul><li>URL: <a href="https://qrl.fungibly.xyz">https://qrl.fungibly.xyz</a></li><li>QRL Docs URL: <a href="https://docs.theqrl.org/mining/pools/#fungibly">https://docs.theqrl.org/mining/pools/#fungibly</a></li><li>Default Stratum: qrl.fungibly.xyz:4444</li><li>Pool Fee: 1% PPS with Hashback program</li><li>Minimum payout: 1 QRL</li><li>Payment Interval: 30 minutes</li><li>Medium: <a href="https://medium.com/u/24eb18c7fb06">fungibly</a></li><li>Telegram: <a href="https://t.me/fungibly">https://t.me/fungibly</a></li><li>Discord: <a href="https://discord.gg/PeeK7Br">https://discord.gg/PeeK7Br</a></li></ul><blockquote>Our goal at fungibly.xyz is to provide the fairest and most transparent QRL mining pool. With Hashback and our recent <a href="https://medium.com/@fungibly/monero-pay-per-share-pps-mining-fungibly-xyz-566b7d8be75?source=friends_link&amp;sk=a58dd998538eb4105223e84f04a45ab5">switch to pay per share (PPS)</a> we hope we are on are way to reaching that goal.</blockquote><blockquote>Please contact us with any questions or concerns, we are available on <a href="https://t.me/fungibly">telegram</a> and <a href="https://discord.gg/PeeK7Br">discord</a>. Stay tuned for more articles on mining <a href="https://medium.com/u/24eb18c7fb06">fungibly</a>. Happy Mining!</blockquote><h4>Hashback program</h4><p>Your exact Hashback rate will be calculated based on your total fees paid. As a guide please see the table below for Hashback rates at various fee levels.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/357/1*btgRA-tSYGCpkKvGlI9gQw.png" /></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=6d3d3a953da5" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/integration-feature-bromine-hardfork-pool-fungibly-6d3d3a953da5">Integration feature: Bromine hardfork pool — Fungibly</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Integration feature: Upcoming Bromine hardfork pool — herominers]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/integration-feature-upcoming-bromine-hardfork-pool-herominers-6aa30fa6d433?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/6aa30fa6d433</guid>
            <category><![CDATA[blockchain-technology]]></category>
            <category><![CDATA[cryptocurrency]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Tue, 07 Apr 2020 12:07:01 GMT</pubDate>
            <atom:updated>2020-04-07T12:01:00.931Z</atom:updated>
            <content:encoded><![CDATA[<h3>Integration feature: Upcoming Bromine hardfork pool — herominers</h3><h4>Cryptonight mining pools</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/1*JjkSp4QQ2JqpdXwjS1mSbQ.png" /></figure><ul><li>URL: <a href="https://qrl.herominers.com/">https://qrl.herominers.com/</a></li><li>QRL Docs URL: <a href="https://docs.theqrl.org/mining/pools/#herominers">https://docs.theqrl.org/mining/pools/#herominers</a></li><li>Default Stratum: qrl.herominers.com:10371</li><li>Pool Fee: 0.9%</li><li>Minimum payout: 1 QRL</li><li>Payment Interval: 5 minutes</li></ul><p>Herominers has been a longstanding QRL mining pool from the very beginning of QRL mainnet. We’re happy that they’ve continued to support us for our upcoming hardfork, Bromine!</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=6aa30fa6d433" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/integration-feature-upcoming-bromine-hardfork-pool-herominers-6aa30fa6d433">Integration feature: Upcoming Bromine hardfork pool — herominers</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
    </channel>
</rss>